"""
Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms will 
be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not 
exceed four million, find the sum of the even-valued terms.

"""


def fib():
	# firstTerm and secondTerm are the seeds of fib numbers
	firstTerm = 1
	secondTerm = 2
	# this will hold the result of the sum of firstTerm and secondTerm
	newTerm = 0
	#start this at 2 since fib numbers already start with 1 and 2
	termCount = 2
	#list to hold fib numbers that are even
	evenTerms = []
	#will hold the sum of the even numbers
	finalSum = 0

	#term count keeps terms of which number in the sequence we are in
	while (termCount < 10000):
		#checks to see if the newly generated fib number is >=
		# 4 million. If so we are done and just add 2 to finalSum
		# since 2 is not included in the even number list.
		if newTerm >= 4000000:
			return finalSum + 2

		#the following 3 lines are the fib sequence
		newTerm = firstTerm + secondTerm
		firstTerm = secondTerm
		secondTerm = newTerm
		
		termCount = termCount + 1

		#check if the fib number is even
		if(newTerm % 2 == 0):
			
			evenTerms.append(newTerm)

		finalSum = sum(evenTerms)
	
print fib()
